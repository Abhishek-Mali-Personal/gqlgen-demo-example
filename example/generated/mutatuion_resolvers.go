package generated

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.41

import (
	"context"
	"example/models"
)

// RegisterCompany is the resolver for the registerCompany field.
func (r *mutationResolver) RegisterCompany(ctx context.Context, input models.CreateCompany) (*models.Company, error) {
	return r.Domain.RegisterNewComapny(input)
}

// RegisterEmployee is the resolver for the registerEmployee field.
func (r *mutationResolver) RegisterEmployee(ctx context.Context, input models.CreateEmployee) (*models.Employee, error) {
	return r.Domain.CreateNewEmployee(input)
}

// CreateTask is the resolver for the createTask field.
func (r *mutationResolver) CreateTask(ctx context.Context, input *models.CreateTask) (*models.Task, error) {
	return r.Domain.CreateNewTask(input)
}

// AssignTask is the resolver for the assignTask field.
func (r *mutationResolver) AssignTask(ctx context.Context, taskID int, employeeIds []int) (*models.Task, error) {
	return r.Domain.AssigntaskToEmployees(taskID, employeeIds)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
